{"version":3,"file":"notificare.js","sourceRoot":"","sources":["../../src/js/notificare.ts"],"names":[],"mappings":"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","sourcesContent":["import { NotificareDeviceModule } from './notificare-device-module';\nimport { NotificareEventsModule } from './notificare-events-module';\nimport { EventSubscription } from './events';\nimport { NotificareApplication } from './models/notificare-application';\nimport { NotificareNotification } from './models/notificare-notification';\nimport { NotificareDevice } from './models/notificare-device';\n\nexport class Notificare {\n  private static readonly deviceModule = new NotificareDeviceModule();\n  private static readonly eventsModule = new NotificareEventsModule();\n\n  //\n  // Modules\n  //\n\n  public static device(): NotificareDeviceModule {\n    return this.deviceModule;\n  }\n\n  public static events(): NotificareEventsModule {\n    return this.eventsModule;\n  }\n\n  //\n  // Methods\n  //\n\n  public static async isConfigured(): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'isConfigured', []);\n    });\n  }\n\n  public static async isReady(): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'isReady', []);\n    });\n  }\n\n  public static async launch(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'launch', []);\n    });\n  }\n\n  public static async unlaunch(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'unlaunch', []);\n    });\n  }\n\n  public static async getApplication(): Promise<NotificareApplication | null> {\n    return new Promise<NotificareApplication>((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'getApplication', []);\n    });\n  }\n\n  public static async fetchApplication(): Promise<NotificareApplication> {\n    return new Promise<NotificareApplication>((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'fetchApplication', []);\n    });\n  }\n\n  public static async fetchNotification(id: string): Promise<NotificareNotification> {\n    return new Promise<NotificareNotification>((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'fetchNotification', [id]);\n    });\n  }\n\n  //\n  // Events\n  //\n\n  static onReady(callback: (application: NotificareApplication) => void): EventSubscription {\n    return new EventSubscription('ready', callback);\n  }\n\n  static onUnlaunched(callback: () => void): EventSubscription {\n    return new EventSubscription('unlaunched', callback);\n  }\n\n  static onDeviceRegistered(callback: (device: NotificareDevice) => void): EventSubscription {\n    return new EventSubscription('device_registered', callback);\n  }\n\n  static onUrlOpened(callback: (url: string) => void): EventSubscription {\n    return new EventSubscription('url_opened', callback);\n  }\n}\n"]}