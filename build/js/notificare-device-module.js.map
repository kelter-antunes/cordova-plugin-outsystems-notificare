{"version":3,"file":"notificare-device-module.js","sourceRoot":"","sources":["../../src/js/notificare-device-module.ts"],"names":[],"mappings":"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","sourcesContent":["import { NotificareDevice } from './models/notificare-device';\nimport { NotificareDoNotDisturb } from './models/notificare-do-not-disturb';\n\nexport class NotificareDeviceModule {\n  public async getCurrentDevice(): Promise<NotificareDevice | null> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'getCurrentDevice', []);\n    });\n  }\n\n  public async getPreferredLanguage(): Promise<string | null> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'getPreferredLanguage', []);\n    });\n  }\n\n  public async updatePreferredLanguage(language: string | null): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'updatePreferredLanguage', [language]);\n    });\n  }\n\n  public async register(userId: string | null, userName: string | null): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'register', [userId, userName]);\n    });\n  }\n\n  public async fetchTags(): Promise<string[]> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'fetchTags', []);\n    });\n  }\n\n  public async addTag(tag: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'addTag', [tag]);\n    });\n  }\n\n  public async addTags(tags: string[]): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'addTags', [tags]);\n    });\n  }\n\n  public async removeTag(tag: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'removeTag', [tag]);\n    });\n  }\n\n  public async removeTags(tags: string[]): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'removeTags', [tags]);\n    });\n  }\n\n  public async clearTags(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'clearTags', []);\n    });\n  }\n\n  public async fetchDoNotDisturb(): Promise<NotificareDoNotDisturb | null> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'fetchDoNotDisturb', []);\n    });\n  }\n\n  public async updateDoNotDisturb(dnd: NotificareDoNotDisturb): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'updateDoNotDisturb', [dnd]);\n    });\n  }\n\n  public async clearDoNotDisturb(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'clearDoNotDisturb', []);\n    });\n  }\n\n  public async fetchUserData(): Promise<Record<string, string>> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'fetchUserData', []);\n    });\n  }\n\n  public async updateUserData(userData: Record<string, string>): Promise<void> {\n    return new Promise((resolve, reject) => {\n      cordova.exec(resolve, reject, 'Notificare', 'updateUserData', [userData]);\n    });\n  }\n}\n"]}